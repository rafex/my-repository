name: Build and Deploy Debian Package CURP Generator

on:
  push:
    branches: [ main ]
    paths:
      - "src/rust/curp_generator/**"
      - ".github/workflows/curp-generator-package-deploy.yml"
      - "src/rust/curp_generator/packaging/deb/amd64/**"
      - "src/rust/curp_generator/packaging/deb/arm64/**"
  workflow_dispatch:

jobs:
  build-and-deploy-amd64:
    runs-on: ubuntu-latest
    # if: contains(github.event.head_commit.message, 'amd64') || contains(join(github.event.commits.*.modified, ','), 'src/rust/curp_generator/packaging/deb/amd64/')

    steps:
      - name: 🧾 Checkout repo
        uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0

      - name: 🦀 Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: 📦 Install packaging tools
        run: sudo apt update && sudo apt install -y dpkg-dev lintian

      - name: 🛠 Build Rust library
        working-directory: src/rust/curp-generator
        run: make install-tools cbindgen

      - name: 📦 Build .deb package
        working-directory: src/rust/curp-generator
        run: |
          make changelog-deb ARCH=amd64
          make package-deb ARCH=amd64
          ls -lah
          cp libcurp-generator*_amd64.deb $GITHUB_WORKSPACE/

      - name: 🔍 Lint package with lintian
        working-directory: src/rust/curp-generator
        run: |
          ls -la
          make lint ARCH=amd64

      - name: 🧮 Generate SHA256 checksum
        run: |
          for deb in libcurp-generator*.deb; do
            sha256sum "$deb" > "$deb.sha256"
          done

      - name: 🔏 Sign .deb package
        run: |
          echo "${{ secrets.RAFEX_GPG_PRIVATE_KEY }}" | base64 -d > private.key.asc
          gpg --batch --import private.key.asc
          debs=$(ls libcurp-generator*.deb)
          for deb in $debs; do
            gpg --output "$deb.sig" --detach-sign --armor "$deb"
          done

      - name: 🚀 Upload to server using scp
        run: |
          echo "${{ secrets.RAFEX_SERVER_SSH_KEY }}" > id_github_gactions
          chmod 600 id_github_gactions
          scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i id_github_gactions ./*_amd64.deb ./*_amd64.deb.sig ./*_amd64.deb.sha256 ${{ secrets.RAFEX_SERVER_USER }}@${{ secrets.RAFEX_SERVER_HOST }}:/srv/repo/debian/dists/stable/main/binary-amd64/

      - name: 🔄 Regenerate Packages.gz using ssh
        run: |
          echo "${{ secrets.RAFEX_SERVER_SSH_KEY }}" > id_github_gactions
          chmod 600 id_github_gactions
          ssh -i id_github_gactions -o StrictHostKeyChecking=no ${{ secrets.RAFEX_SERVER_USER }}@${{ secrets.RAFEX_SERVER_HOST }} \
            "bash -c 'cd /srv/repo/debian && \
            apt-ftparchive packages dists/stable/main/binary-amd64 > dists/stable/main/binary-amd64/Packages && \
            gzip -9c dists/stable/main/binary-amd64/Packages > dists/stable/main/binary-amd64/Packages.gz'"

      - name: 🔏 Sign Release
        run: |
          echo "${{ secrets.RAFEX_SERVER_SSH_KEY }}" > id_github_gactions
          chmod 600 id_github_gactions
          ssh -i id_github_gactions -o StrictHostKeyChecking=no ${{ secrets.RAFEX_SERVER_USER }}@${{ secrets.RAFEX_SERVER_HOST }} \
            "bash -c 'cd /srv/repo/debian && \
            rm -f dists/stable/Release dists/stable/Release.gpg dists/stable/InRelease && \
            apt-ftparchive -c ${{ secrets.RAFEX_RELEASE_CONF }} release dists/stable > dists/stable/Release && \
            gpg --batch --yes --default-key ${{ secrets.RAFEX_GPG_KEY }} -abs -o dists/stable/Release.gpg dists/stable/Release && \
            gpg --batch --yes --default-key ${{ secrets.RAFEX_GPG_KEY }} --clearsign -o dists/stable/InRelease dists/stable/Release'"

  build-and-deploy-arm64:
    runs-on: ubuntu-latest
    # if: contains(github.event.head_commit.message, 'arm64') || contains(join(github.event.commits.*.modified, ','), 'src/rust/curp_generator/packaging/deb/arm64/')

    steps:
      - name: 🧾 Checkout repo
        uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0

      - name: 🦀 Install Rust + ARM target
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-unknown-linux-gnu

      - name: 🧰 Install cross-compiling tools
        run: sudo apt update && sudo apt install -y dpkg-dev gcc-aarch64-linux-gnu libc6-dev-arm64-cross lintian

      - name: 🧾 Generate header
        working-directory: src/rust/curp-generator
        run: make install-tools cbindgen

      - name: 📦 Build .deb package for ARM64
        working-directory: src/rust/curp-generator
        run: |
          make changelog-deb ARCH=arm64
          make package-deb ARCH=arm64
          ls -lah
          cp libcurp-generator*_arm64.deb $GITHUB_WORKSPACE/

      - name: 🔍 Lint package with lintian
        working-directory: src/rust/curp-generator
        run: make lint ARCH=arm64

      - name: 🧮 Generate SHA256 checksum
        run: |
          for deb in libcurp-generator*.deb; do
            sha256sum "$deb" > "$deb.sha256"
          done

      - name: 🔏 Sign .deb package
        run: |
          echo "${{ secrets.RAFEX_GPG_PRIVATE_KEY }}" | base64 -d > private.key.asc
          gpg --batch --import private.key.asc
          debs=$(ls libcurp-generator*.deb)
          for deb in $debs; do
            gpg --output "$deb.sig" --detach-sign --armor "$deb"
          done

      - name: 🚀 Upload ARM64 package to server using scp
        run: |
          echo "${{ secrets.RAFEX_SERVER_SSH_KEY }}" > id_github_gactions
          chmod 600 id_github_gactions
          scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i id_github_gactions ./*_arm64.deb ./*_arm64.deb.sig ./*_arm64.deb.sha256 ${{ secrets.RAFEX_SERVER_USER }}@${{ secrets.RAFEX_SERVER_HOST }}:/srv/repo/debian/dists/stable/main/binary-arm64/

      - name: 🔄 Regenerate Packages.gz using ssh
        run: |
          echo "${{ secrets.RAFEX_SERVER_SSH_KEY }}" > id_github_gactions
          chmod 600 id_github_gactions
          ssh -i id_github_gactions -o StrictHostKeyChecking=no ${{ secrets.RAFEX_SERVER_USER }}@${{ secrets.RAFEX_SERVER_HOST }} \
            "bash -c 'cd /srv/repo/debian && \
            apt-ftparchive packages dists/stable/main/binary-arm64 > dists/stable/main/binary-arm64/Packages && \
            gzip -9c dists/stable/main/binary-arm64/Packages > dists/stable/main/binary-arm64/Packages.gz'"

      - name: 🔏 Sign Release
        run: |
          echo "${{ secrets.RAFEX_SERVER_SSH_KEY }}" > id_github_gactions
          chmod 600 id_github_gactions
          ssh -i id_github_gactions -o StrictHostKeyChecking=no ${{ secrets.RAFEX_SERVER_USER }}@${{ secrets.RAFEX_SERVER_HOST }} \
            "bash -c 'cd /srv/repo/debian && \
            rm -f dists/stable/Release dists/stable/Release.gpg dists/stable/InRelease && \
            apt-ftparchive -c ${{ secrets.RAFEX_RELEASE_CONF }} release dists/stable > dists/stable/Release && \
            gpg --batch --yes --default-key ${{ secrets.RAFEX_GPG_KEY }} -abs -o dists/stable/Release.gpg dists/stable/Release && \
            gpg --batch --yes --default-key ${{ secrets.RAFEX_GPG_KEY }} --clearsign -o dists/stable/InRelease dists/stable/Release'"